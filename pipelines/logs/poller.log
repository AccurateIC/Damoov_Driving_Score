Polling started... running every 60 seconds.

--- Syncing old → new table ---
--- Triggering scoring pipeline ---
✅ newSampleTable updated with Safe Score and Eco Score.
Sleeping for 60 seconds...


--- Syncing old → new table ---
--- Triggering scoring pipeline ---
✅ newSampleTable updated with Safe Score and Eco Score.
Sleeping for 60 seconds...


--- Syncing old → new table ---
--- Triggering scoring pipeline ---
✅ newSampleTable updated with Safe Score and Eco Score.
Sleeping for 60 seconds...


--- Syncing old → new table ---
--- Triggering scoring pipeline ---
✅ newSampleTable updated with Safe Score and Eco Score.
Sleeping for 60 seconds...


--- Syncing old → new table ---
--- Triggering scoring pipeline ---
Traceback (most recent call last):
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 575, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 826, in _read_query_result
    result.read()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 1203, in read
    first_packet = self.connection._read_packet()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 782, in _read_packet
    packet.raise_for_error()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1051, "Unknown table 'accurate_tracking_db._tmp_score_updates'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ai_server/Desktop/Damoov_python_backend/repo/pipelines/poller/pipeline_poller.py", line 27, in <module>
    poll_pipeline(interval_sec=60)  # 1-min polling
  File "/home/ai_server/Desktop/Damoov_python_backend/repo/pipelines/poller/pipeline_poller.py", line 21, in poll_pipeline
    run_score_pipeline(engine, config)
  File "/home/ai_server/Desktop/Damoov_python_backend/repo/pipelines/poller/score_pipeline.py", line 221, in run_score_pipeline
    conn.exec_driver_sql(f"DROP TABLE {tmp_table}")
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1779, in exec_driver_sql
    ret = self._execute_context(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 575, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 826, in _read_query_result
    result.read()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 1203, in read
    first_packet = self.connection._read_packet()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 782, in _read_packet
    packet.raise_for_error()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1051, "Unknown table 'accurate_tracking_db._tmp_score_updates'")
[SQL: DROP TABLE _tmp_score_updates]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Polling started... running every 60 seconds.

--- Syncing old → new table ---
Traceback (most recent call last):
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 575, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 826, in _read_query_result
    result.read()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 1203, in read
    first_packet = self.connection._read_packet()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 782, in _read_packet
    packet.raise_for_error()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1205, 'Lock wait timeout exceeded; try restarting transaction')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ai_server/Desktop/Damoov_python_backend/repo/pipelines/poller/pipeline_poller.py", line 27, in <module>
    poll_pipeline(interval_sec=60)  # 1-min polling
  File "/home/ai_server/Desktop/Damoov_python_backend/repo/pipelines/poller/pipeline_poller.py", line 18, in poll_pipeline
    sync_old_to_new(engine, config)
  File "/home/ai_server/Desktop/Damoov_python_backend/repo/pipelines/poller/sync_utils.py", line 37, in sync_old_to_new
    conn.execute(text(sql))
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1419, in execute
    return meth(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/sql/elements.py", line 526, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1641, in _execute_clauseelement
    ret = self._execute_context(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/ai_server/.local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 575, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 826, in _read_query_result
    result.read()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 1203, in read
    first_packet = self.connection._read_packet()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/connections.py", line 782, in _read_packet
    packet.raise_for_error()
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/home/ai_server/.local/lib/python3.10/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1205, 'Lock wait timeout exceeded; try restarting transaction')
[SQL: 
        INSERT INTO newSampleTable (`ID`, `latitude`, `longitude`, `timestamp`, `tick_timestamp`, `speed_kmh`, `midSpeed`, `course`, `height`, `acceleration`, `deceleration`, `lateral`, `yaw`, `total_meters`, `established_indexA`, `established_indexB`, `start_date`, `end_date`, `unique_id`, `number`, `device_id`, `user_id`, `acceleration_x`, `acceleration_y`, `acceleration_z`, `gyroscope_x`, `gyroscope_y`, `gyroscope_z`, `acceleration_x_original`, `acceleration_y_original`, `acceleration_z_original`, `gyroscope_x_original`, `gyroscope_y_original`, `gyroscope_z_original`, `accuracy`, `screen_on`, `screen_blocked`, `vehicle_indicators`, `quantile`)
        SELECT o.`ID`, o.`latitude`, o.`longitude`, FROM_UNIXTIME(o.`timestamp`) AS `timestamp`, o.`tick_timestamp`, o.`speed_kmh`, o.`midSpeed`, o.`course`, o.`height`, o.`acceleration`, o.`deceleration`, o.`lateral`, o.`yaw`, o.`total_meters`, o.`established_indexA`, o.`established_indexB`, o.`start_date`, o.`end_date`, o.`unique_id`, o.`number`, o.`device_id`, o.`user_id`, o.`acceleration_x`, o.`acceleration_y`, o.`acceleration_z`, o.`gyroscope_x`, o.`gyroscope_y`, o.`gyroscope_z`, o.`acceleration_x_original`, o.`acceleration_y_original`, o.`acceleration_z_original`, o.`gyroscope_x_original`, o.`gyroscope_y_original`, o.`gyroscope_z_original`, o.`accuracy`, o.`screen_on`, o.`screen_blocked`, o.`vehicle_indicators`, o.`quantile`
        FROM SampleTable o
        LEFT JOIN newSampleTable n ON o.unique_id = n.unique_id
        WHERE n.unique_id IS NULL
    ]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Polling started... running every 60 seconds.

--- Syncing old → new table ---
✅ Sync successful on attempt 1
--- Triggering scoring pipeline ---
✅ newSampleTable updated with Safe Score and Eco Score.
Sleeping for 60 seconds...


--- Syncing old → new table ---
✅ Sync successful on attempt 1
--- Triggering scoring pipeline ---
✅ newSampleTable updated with Safe Score and Eco Score.
Sleeping for 60 seconds...


--- Syncing old → new table ---
✅ Sync successful on attempt 1
--- Triggering scoring pipeline ---
✅ newSampleTable updated with Safe Score and Eco Score.
Sleeping for 60 seconds...

Polling started... running every 60 seconds.

--- Syncing old → new table ---
✅ Sync successful on attempt 1
--- Triggering scoring pipeline ---
✅ newSampleTable updated with Safe Score and Eco Score.
Sleeping for 60 seconds...


--- Syncing old → new table ---
✅ Sync successful on attempt 1
--- Triggering scoring pipeline ---
✅ newSampleTable updated with Safe Score and Eco Score.
Sleeping for 60 seconds...


--- Syncing old → new table ---
✅ Sync successful on attempt 1
--- Triggering scoring pipeline ---
